
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00802000  00000d14  00000da8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00802020  00802020  00000dc8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000dc8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000198  00000000  00000000  00000e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f91  00000000  00000000  00000fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000688  00000000  00000000  00001f4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001647  00000000  00000000  000025d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003a4  00000000  00000000  00003c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000113c9  00000000  00000000  00003fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005ce  00000000  00000000  00015389  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000120  00000000  00000000  00015957  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000057c0  00000000  00000000  00015a77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  bc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  cc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  dc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ec:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  fc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 100:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 104:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 108:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 10c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 110:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 114:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 118:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 11c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 120:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 124:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 128:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 12c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 130:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 134:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 138:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 13c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 140:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 144:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 148:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 14c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 150:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 154:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 158:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 15c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 160:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 164:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 168:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

0000016c <__ctors_end>:
 16c:	11 24       	eor	r1, r1
 16e:	1f be       	out	0x3f, r1	; 63
 170:	cf ef       	ldi	r28, 0xFF	; 255
 172:	cd bf       	out	0x3d, r28	; 61
 174:	d7 e2       	ldi	r29, 0x27	; 39
 176:	de bf       	out	0x3e, r29	; 62

00000178 <__do_copy_data>:
 178:	10 e2       	ldi	r17, 0x20	; 32
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e2       	ldi	r27, 0x20	; 32
 17e:	e4 e1       	ldi	r30, 0x14	; 20
 180:	fd e0       	ldi	r31, 0x0D	; 13
 182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
 184:	05 90       	lpm	r0, Z+
 186:	0d 92       	st	X+, r0
 188:	a0 32       	cpi	r26, 0x20	; 32
 18a:	b1 07       	cpc	r27, r17
 18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
 18e:	20 e2       	ldi	r18, 0x20	; 32
 190:	a0 e2       	ldi	r26, 0x20	; 32
 192:	b0 e2       	ldi	r27, 0x20	; 32
 194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
 196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
 198:	a8 32       	cpi	r26, 0x28	; 40
 19a:	b2 07       	cpc	r27, r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
 19e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <main>
 1a2:	0c 94 88 06 	jmp	0xd10	; 0xd10 <_exit>

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001aa <AccInit>:
#include "acc.h"



void AccInit(void)
{
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62

	
}
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <AnalogInit>:
#include "Analog.h"
#include <avr/io.h>

void AnalogInit(void)
{
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	cd b7       	in	r28, 0x3d	; 61
 1be:	de b7       	in	r29, 0x3e	; 62

}
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	08 95       	ret

000001c6 <ClockInit>:
#pragma GCC push_options
#pragma GCC optimize ("O2") //This function must be optimized to avoid too long time interval betwee CCP write and CLK.CTRL write (4 CLK CYC max)

void ClockInit(void)
{
	OSC.XOSCCTRL=0b11001011; //Clock<=16MHz	
 1c6:	8b ec       	ldi	r24, 0xCB	; 203
 1c8:	80 93 52 00 	sts	0x0052, r24
	OSC.CTRL=0b01000; //Enable oscillator	
 1cc:	88 e0       	ldi	r24, 0x08	; 8
 1ce:	80 93 50 00 	sts	0x0050, r24
	while (!(OSC.STATUS&0b1000)); //Wait until XTAL osc is ready
 1d2:	80 91 51 00 	lds	r24, 0x0051
 1d6:	83 ff       	sbrs	r24, 3
 1d8:	fc cf       	rjmp	.-8      	; 0x1d2 <ClockInit+0xc>
	
	//Select XTAL osc as system CLK source
	CCP=0xd8;
 1da:	88 ed       	ldi	r24, 0xD8	; 216
 1dc:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL=0b0011;
 1de:	83 e0       	ldi	r24, 0x03	; 3
 1e0:	80 93 40 00 	sts	0x0040, r24
 1e4:	08 95       	ret

000001e6 <EncoderInit>:
#include <util/delay.h>
#include <stdio.h>
#include "encoder.h"

void EncoderInit(void)
{
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	cd b7       	in	r28, 0x3d	; 61
 1ec:	de b7       	in	r29, 0x3e	; 62

}
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <main>:

void SimpleFunction(void);	//A simple function: transmit digits 0 to 9 to the terminal device
void RunLight(void);

int main(void)
{	
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
 1fc:	2e 97       	sbiw	r28, 0x0e	; 14
 1fe:	cd bf       	out	0x3d, r28	; 61
 200:	de bf       	out	0x3e, r29	; 62
	//###1###
	 
	//Initialize subsystems
	ClockInit();			//Initialize system clock (16 MHz)
 202:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <ClockInit>
	USARTInit();			//Initialize USART and bind to stdout,stdin
 206:	0e 94 4b 02 	call	0x496	; 0x496 <USARTInit>
	AnalogInit();			//Initialize ADC
 20a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <AnalogInit>
	AccInit();				//Initialize accelerometer system
 20e:	0e 94 d5 00 	call	0x1aa	; 0x1aa <AccInit>
	LEDInit();				//Initialize LEDs
 212:	0e 94 c6 01 	call	0x38c	; 0x38c <LEDInit>
	SwitchInit();			//Initialize switches
 216:	0e 94 06 02 	call	0x40c	; 0x40c <SwitchInit>
	EncoderInit();			//Initialize encoder
 21a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <EncoderInit>
	SpeakerInit();			//Initialize speaker system
 21e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <SpeakerInit>
	
	//Enable interrupts
	PMIC.CTRL|=0b00000111;  //Enable low, medium, high priority interrupts
 222:	80 ea       	ldi	r24, 0xA0	; 160
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	20 ea       	ldi	r18, 0xA0	; 160
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	f9 01       	movw	r30, r18
 22c:	22 81       	ldd	r18, Z+2	; 0x02
 22e:	27 60       	ori	r18, 0x07	; 7
 230:	fc 01       	movw	r30, r24
 232:	22 83       	std	Z+2, r18	; 0x02
	SREG|=0b10000000;		//Globale interrupt enable
 234:	8f e3       	ldi	r24, 0x3F	; 63
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	2f e3       	ldi	r18, 0x3F	; 63
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	f9 01       	movw	r30, r18
 23e:	20 81       	ld	r18, Z
 240:	20 68       	ori	r18, 0x80	; 128
 242:	fc 01       	movw	r30, r24
 244:	20 83       	st	Z, r18
	}*/	

	//###3###

	//Main program loop
	a=0;
 246:	10 92 21 20 	sts	0x2021, r1
    while(1)
    {
		RunLight();
 24a:	0e 94 ae 01 	call	0x35c	; 0x35c <RunLight>
		printf("$SWITCH %d\r\n", SwitchGet());
 24e:	0e 94 2b 02 	call	0x456	; 0x456 <SwitchGet>
 252:	88 2f       	mov	r24, r24
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	29 2f       	mov	r18, r25
 258:	2f 93       	push	r18
 25a:	8f 93       	push	r24
 25c:	8f e0       	ldi	r24, 0x0F	; 15
 25e:	90 e2       	ldi	r25, 0x20	; 32
 260:	89 2f       	mov	r24, r25
 262:	8f 93       	push	r24
 264:	8f e0       	ldi	r24, 0x0F	; 15
 266:	90 e2       	ldi	r25, 0x20	; 32
 268:	8f 93       	push	r24
 26a:	0e 94 cb 03 	call	0x796	; 0x796 <printf>
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	a8 e4       	ldi	r26, 0x48	; 72
 27c:	b3 e4       	ldi	r27, 0x43	; 67
 27e:	89 83       	std	Y+1, r24	; 0x01
 280:	9a 83       	std	Y+2, r25	; 0x02
 282:	ab 83       	std	Y+3, r26	; 0x03
 284:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	4a e7       	ldi	r20, 0x7A	; 122
 28c:	55 e4       	ldi	r21, 0x45	; 69
 28e:	69 81       	ldd	r22, Y+1	; 0x01
 290:	7a 81       	ldd	r23, Y+2	; 0x02
 292:	8b 81       	ldd	r24, Y+3	; 0x03
 294:	9c 81       	ldd	r25, Y+4	; 0x04
 296:	0e 94 40 03 	call	0x680	; 0x680 <__mulsf3>
 29a:	dc 01       	movw	r26, r24
 29c:	cb 01       	movw	r24, r22
 29e:	8d 83       	std	Y+5, r24	; 0x05
 2a0:	9e 83       	std	Y+6, r25	; 0x06
 2a2:	af 83       	std	Y+7, r26	; 0x07
 2a4:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 2a6:	20 e0       	ldi	r18, 0x00	; 0
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	40 e8       	ldi	r20, 0x80	; 128
 2ac:	5f e3       	ldi	r21, 0x3F	; 63
 2ae:	6d 81       	ldd	r22, Y+5	; 0x05
 2b0:	7e 81       	ldd	r23, Y+6	; 0x06
 2b2:	8f 81       	ldd	r24, Y+7	; 0x07
 2b4:	98 85       	ldd	r25, Y+8	; 0x08
 2b6:	0e 94 bf 02 	call	0x57e	; 0x57e <__cmpsf2>
 2ba:	88 23       	and	r24, r24
 2bc:	2c f4       	brge	.+10     	; 0x2c8 <main+0xd4>
		__ticks = 1;
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	89 87       	std	Y+9, r24	; 0x09
 2c4:	9a 87       	std	Y+10, r25	; 0x0a
 2c6:	3f c0       	rjmp	.+126    	; 0x346 <main+0x152>
	else if (__tmp > 65535)
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	3f ef       	ldi	r19, 0xFF	; 255
 2cc:	4f e7       	ldi	r20, 0x7F	; 127
 2ce:	57 e4       	ldi	r21, 0x47	; 71
 2d0:	6d 81       	ldd	r22, Y+5	; 0x05
 2d2:	7e 81       	ldd	r23, Y+6	; 0x06
 2d4:	8f 81       	ldd	r24, Y+7	; 0x07
 2d6:	98 85       	ldd	r25, Y+8	; 0x08
 2d8:	0e 94 3c 03 	call	0x678	; 0x678 <__gesf2>
 2dc:	18 16       	cp	r1, r24
 2de:	4c f5       	brge	.+82     	; 0x332 <main+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2e0:	20 e0       	ldi	r18, 0x00	; 0
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	40 e2       	ldi	r20, 0x20	; 32
 2e6:	51 e4       	ldi	r21, 0x41	; 65
 2e8:	69 81       	ldd	r22, Y+1	; 0x01
 2ea:	7a 81       	ldd	r23, Y+2	; 0x02
 2ec:	8b 81       	ldd	r24, Y+3	; 0x03
 2ee:	9c 81       	ldd	r25, Y+4	; 0x04
 2f0:	0e 94 40 03 	call	0x680	; 0x680 <__mulsf3>
 2f4:	dc 01       	movw	r26, r24
 2f6:	cb 01       	movw	r24, r22
 2f8:	bc 01       	movw	r22, r24
 2fa:	cd 01       	movw	r24, r26
 2fc:	0e 94 c3 02 	call	0x586	; 0x586 <__fixunssfsi>
 300:	dc 01       	movw	r26, r24
 302:	cb 01       	movw	r24, r22
 304:	89 87       	std	Y+9, r24	; 0x09
 306:	9a 87       	std	Y+10, r25	; 0x0a
 308:	0f c0       	rjmp	.+30     	; 0x328 <main+0x134>
 30a:	80 e9       	ldi	r24, 0x90	; 144
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	8b 87       	std	Y+11, r24	; 0x0b
 310:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 312:	8b 85       	ldd	r24, Y+11	; 0x0b
 314:	9c 85       	ldd	r25, Y+12	; 0x0c
 316:	01 97       	sbiw	r24, 0x01	; 1
 318:	f1 f7       	brne	.-4      	; 0x316 <main+0x122>
 31a:	8b 87       	std	Y+11, r24	; 0x0b
 31c:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 31e:	89 85       	ldd	r24, Y+9	; 0x09
 320:	9a 85       	ldd	r25, Y+10	; 0x0a
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	89 87       	std	Y+9, r24	; 0x09
 326:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 328:	89 85       	ldd	r24, Y+9	; 0x09
 32a:	9a 85       	ldd	r25, Y+10	; 0x0a
 32c:	00 97       	sbiw	r24, 0x00	; 0
 32e:	69 f7       	brne	.-38     	; 0x30a <main+0x116>
		_delay_ms(200);
    }
 330:	8c cf       	rjmp	.-232    	; 0x24a <main+0x56>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 332:	6d 81       	ldd	r22, Y+5	; 0x05
 334:	7e 81       	ldd	r23, Y+6	; 0x06
 336:	8f 81       	ldd	r24, Y+7	; 0x07
 338:	98 85       	ldd	r25, Y+8	; 0x08
 33a:	0e 94 c3 02 	call	0x586	; 0x586 <__fixunssfsi>
 33e:	dc 01       	movw	r26, r24
 340:	cb 01       	movw	r24, r22
 342:	89 87       	std	Y+9, r24	; 0x09
 344:	9a 87       	std	Y+10, r25	; 0x0a
 346:	89 85       	ldd	r24, Y+9	; 0x09
 348:	9a 85       	ldd	r25, Y+10	; 0x0a
 34a:	8d 87       	std	Y+13, r24	; 0x0d
 34c:	9e 87       	std	Y+14, r25	; 0x0e
 34e:	8d 85       	ldd	r24, Y+13	; 0x0d
 350:	9e 85       	ldd	r25, Y+14	; 0x0e
 352:	01 97       	sbiw	r24, 0x01	; 1
 354:	f1 f7       	brne	.-4      	; 0x352 <main+0x15e>
 356:	8d 87       	std	Y+13, r24	; 0x0d
 358:	9e 87       	std	Y+14, r25	; 0x0e
 35a:	77 cf       	rjmp	.-274    	; 0x24a <main+0x56>

0000035c <RunLight>:
	for (b=0;b<10;b++)
		printf ("%d ",b);
}

void RunLight(void)
{
 35c:	cf 93       	push	r28
 35e:	df 93       	push	r29
 360:	cd b7       	in	r28, 0x3d	; 61
 362:	de b7       	in	r29, 0x3e	; 62
	if(ledOn == 0x08)							//4de bit actief (led: D4)
 364:	80 91 00 20 	lds	r24, 0x2000
 368:	88 30       	cpi	r24, 0x08	; 8
 36a:	21 f4       	brne	.+8      	; 0x374 <RunLight+0x18>
	{
		//0000 1000
		ledOn = 0x01;							//1ste bit actief (led: D1)
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	80 93 00 20 	sts	0x2000, r24
 372:	05 c0       	rjmp	.+10     	; 0x37e <RunLight+0x22>
		//printf("ledOn = 0x01\r\n");
	}
	else
	{
		ledOn = ledOn << 1; 					//Actieve bit links shiften
 374:	80 91 00 20 	lds	r24, 0x2000
 378:	88 0f       	add	r24, r24
 37a:	80 93 00 20 	sts	0x2000, r24
		//printf("ledOn shifted left\r\n", ledOn);
	}
	
	LEDSet(ledOn);
 37e:	80 91 00 20 	lds	r24, 0x2000
 382:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LEDSet>
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	08 95       	ret

0000038c <LEDInit>:
#include "LED.h"
#include <avr/io.h>

void LEDInit(void)
{
 38c:	cf 93       	push	r28
 38e:	df 93       	push	r29
 390:	cd b7       	in	r28, 0x3d	; 61
 392:	de b7       	in	r29, 0x3e	; 62
	PORTE.DIRSET= 0b00001111;	//set output
 394:	80 e8       	ldi	r24, 0x80	; 128
 396:	96 e0       	ldi	r25, 0x06	; 6
 398:	2f e0       	ldi	r18, 0x0F	; 15
 39a:	fc 01       	movw	r30, r24
 39c:	21 83       	std	Z+1, r18	; 0x01
	PORTE.PIN0CTRL= 0b01000000;	//6: invert, 5-3: output conf: pull down, 2-0: input conf: rising edge -- output maakt niet uit
 39e:	80 e8       	ldi	r24, 0x80	; 128
 3a0:	96 e0       	ldi	r25, 0x06	; 6
 3a2:	20 e4       	ldi	r18, 0x40	; 64
 3a4:	fc 01       	movw	r30, r24
 3a6:	20 8b       	std	Z+16, r18	; 0x10
	PORTE.PIN1CTRL= 0b01000000;
 3a8:	80 e8       	ldi	r24, 0x80	; 128
 3aa:	96 e0       	ldi	r25, 0x06	; 6
 3ac:	20 e4       	ldi	r18, 0x40	; 64
 3ae:	fc 01       	movw	r30, r24
 3b0:	21 8b       	std	Z+17, r18	; 0x11
	PORTE.PIN2CTRL= 0b01000000;
 3b2:	80 e8       	ldi	r24, 0x80	; 128
 3b4:	96 e0       	ldi	r25, 0x06	; 6
 3b6:	20 e4       	ldi	r18, 0x40	; 64
 3b8:	fc 01       	movw	r30, r24
 3ba:	22 8b       	std	Z+18, r18	; 0x12
	PORTE.PIN3CTRL= 0b01000000;
 3bc:	80 e8       	ldi	r24, 0x80	; 128
 3be:	96 e0       	ldi	r25, 0x06	; 6
 3c0:	20 e4       	ldi	r18, 0x40	; 64
 3c2:	fc 01       	movw	r30, r24
 3c4:	23 8b       	std	Z+19, r18	; 0x13
	
}
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	08 95       	ret

000003cc <LEDSet>:
void LEDSet(char bitmask)
{
 3cc:	cf 93       	push	r28
 3ce:	df 93       	push	r29
 3d0:	1f 92       	push	r1
 3d2:	cd b7       	in	r28, 0x3d	; 61
 3d4:	de b7       	in	r29, 0x3e	; 62
 3d6:	89 83       	std	Y+1, r24	; 0x01
	//and-functie om enkel eerste 4 bits over te houden (B0 --> B3)
	//bitmask:		0110 0101
	//0x0F:			0000 1111
	//bitmask -->	0000 0101
	bitmask	= bitmask & 0x0F;
 3d8:	89 81       	ldd	r24, Y+1	; 0x01
 3da:	8f 70       	andi	r24, 0x0F	; 15
 3dc:	89 83       	std	Y+1, r24	; 0x01
	//OUT:			1100 0110
	//0xF0: &		1111 0000
	//OUT -->		1100 0000 laatste 4 bits onthouden
	//bitmask: |	0000 0101
	//OUT -->		1100 0101 originele OUT en bitmask samengevoegd
	PORTE.OUT= (PORTE.OUT & 0xF0) | bitmask;
 3de:	80 e8       	ldi	r24, 0x80	; 128
 3e0:	96 e0       	ldi	r25, 0x06	; 6
 3e2:	20 e8       	ldi	r18, 0x80	; 128
 3e4:	36 e0       	ldi	r19, 0x06	; 6
 3e6:	f9 01       	movw	r30, r18
 3e8:	24 81       	ldd	r18, Z+4	; 0x04
 3ea:	32 2f       	mov	r19, r18
 3ec:	30 7f       	andi	r19, 0xF0	; 240
 3ee:	29 81       	ldd	r18, Y+1	; 0x01
 3f0:	23 2b       	or	r18, r19
 3f2:	fc 01       	movw	r30, r24
 3f4:	24 83       	std	Z+4, r18	; 0x04
 3f6:	0f 90       	pop	r0
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	08 95       	ret

000003fe <SpeakerInit>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "speaker.h"

void SpeakerInit(void)
{
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	cd b7       	in	r28, 0x3d	; 61
 404:	de b7       	in	r29, 0x3e	; 62
		//TCC1.CTRLB=
		//TCC1.CTRLC=
		//TCC1.CTRLD=
		//TCC1.CTRLE=
		
}
 406:	df 91       	pop	r29
 408:	cf 91       	pop	r28
 40a:	08 95       	ret

0000040c <SwitchInit>:
#include "switch.h"
#include <avr/io.h>

void SwitchInit(void)
{
 40c:	cf 93       	push	r28
 40e:	df 93       	push	r29
 410:	cd b7       	in	r28, 0x3d	; 61
 412:	de b7       	in	r29, 0x3e	; 62
	PORTD.DIRCLR= 0b11110001;			//Set Input
 414:	80 e6       	ldi	r24, 0x60	; 96
 416:	96 e0       	ldi	r25, 0x06	; 6
 418:	21 ef       	ldi	r18, 0xF1	; 241
 41a:	fc 01       	movw	r30, r24
 41c:	22 83       	std	Z+2, r18	; 0x02
	PORTD.PIN0CTRL= 0b01011001;		//6: invert, 5-3: output conf: pull up, 2-0: input conf: rising edge
 41e:	80 e6       	ldi	r24, 0x60	; 96
 420:	96 e0       	ldi	r25, 0x06	; 6
 422:	29 e5       	ldi	r18, 0x59	; 89
 424:	fc 01       	movw	r30, r24
 426:	20 8b       	std	Z+16, r18	; 0x10
	PORTD.PIN4CTRL= 0b01011001;
 428:	80 e6       	ldi	r24, 0x60	; 96
 42a:	96 e0       	ldi	r25, 0x06	; 6
 42c:	29 e5       	ldi	r18, 0x59	; 89
 42e:	fc 01       	movw	r30, r24
 430:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL= 0b01011001;
 432:	80 e6       	ldi	r24, 0x60	; 96
 434:	96 e0       	ldi	r25, 0x06	; 6
 436:	29 e5       	ldi	r18, 0x59	; 89
 438:	fc 01       	movw	r30, r24
 43a:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN6CTRL= 0b01011001;
 43c:	80 e6       	ldi	r24, 0x60	; 96
 43e:	96 e0       	ldi	r25, 0x06	; 6
 440:	29 e5       	ldi	r18, 0x59	; 89
 442:	fc 01       	movw	r30, r24
 444:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN7CTRL= 0b01011001;
 446:	80 e6       	ldi	r24, 0x60	; 96
 448:	96 e0       	ldi	r25, 0x06	; 6
 44a:	29 e5       	ldi	r18, 0x59	; 89
 44c:	fc 01       	movw	r30, r24
 44e:	27 8b       	std	Z+23, r18	; 0x17
}
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	08 95       	ret

00000456 <SwitchGet>:


char SwitchGet(void)
{
 456:	cf 93       	push	r28
 458:	df 93       	push	r29
 45a:	1f 92       	push	r1
 45c:	cd b7       	in	r28, 0x3d	; 61
 45e:	de b7       	in	r29, 0x3e	; 62
	char switchInput = (PORTD.IN & 0xF0) >> 3;	//Schuif B7-B4 naar B4-B1
 460:	80 e6       	ldi	r24, 0x60	; 96
 462:	96 e0       	ldi	r25, 0x06	; 6
 464:	fc 01       	movw	r30, r24
 466:	80 85       	ldd	r24, Z+8	; 0x08
 468:	88 2f       	mov	r24, r24
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	80 7f       	andi	r24, 0xF0	; 240
 46e:	99 27       	eor	r25, r25
 470:	95 95       	asr	r25
 472:	87 95       	ror	r24
 474:	95 95       	asr	r25
 476:	87 95       	ror	r24
 478:	95 95       	asr	r25
 47a:	87 95       	ror	r24
 47c:	89 83       	std	Y+1, r24	; 0x01
	return switchInput | (PORTD.IN & 0x01);		//Voeg B0 toe aan switchInput
 47e:	80 e6       	ldi	r24, 0x60	; 96
 480:	96 e0       	ldi	r25, 0x06	; 6
 482:	fc 01       	movw	r30, r24
 484:	80 85       	ldd	r24, Z+8	; 0x08
 486:	98 2f       	mov	r25, r24
 488:	91 70       	andi	r25, 0x01	; 1
 48a:	89 81       	ldd	r24, Y+1	; 0x01
 48c:	89 2b       	or	r24, r25
}
 48e:	0f 90       	pop	r0
 490:	df 91       	pop	r29
 492:	cf 91       	pop	r28
 494:	08 95       	ret

00000496 <USARTInit>:
static int stdio_putchar(char c, FILE * stream);
static int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_WRITE);

void USARTInit(void)
{
 496:	cf 93       	push	r28
 498:	df 93       	push	r29
 49a:	cd b7       	in	r28, 0x3d	; 61
 49c:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	
 49e:	80 e6       	ldi	r24, 0x60	; 96
 4a0:	96 e0       	ldi	r25, 0x06	; 6
 4a2:	28 e0       	ldi	r18, 0x08	; 8
 4a4:	fc 01       	movw	r30, r24
 4a6:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
 4a8:	80 e6       	ldi	r24, 0x60	; 96
 4aa:	96 e0       	ldi	r25, 0x06	; 6
 4ac:	24 e0       	ldi	r18, 0x04	; 4
 4ae:	fc 01       	movw	r30, r24
 4b0:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000;
 4b2:	80 ea       	ldi	r24, 0xA0	; 160
 4b4:	99 e0       	ldi	r25, 0x09	; 9
 4b6:	fc 01       	movw	r30, r24
 4b8:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000;
 4ba:	80 ea       	ldi	r24, 0xA0	; 160
 4bc:	99 e0       	ldi	r25, 0x09	; 9
 4be:	28 e1       	ldi	r18, 0x18	; 24
 4c0:	fc 01       	movw	r30, r24
 4c2:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011;
 4c4:	80 ea       	ldi	r24, 0xA0	; 160
 4c6:	99 e0       	ldi	r25, 0x09	; 9
 4c8:	23 e0       	ldi	r18, 0x03	; 3
 4ca:	fc 01       	movw	r30, r24
 4cc:	25 83       	std	Z+5, r18	; 0x05
	
	USART.BAUDCTRLA=0xE5; //BSEL=3301, BSCALE=-5 9600 baud
 4ce:	80 ea       	ldi	r24, 0xA0	; 160
 4d0:	99 e0       	ldi	r25, 0x09	; 9
 4d2:	25 ee       	ldi	r18, 0xE5	; 229
 4d4:	fc 01       	movw	r30, r24
 4d6:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0xBC; 
 4d8:	80 ea       	ldi	r24, 0xA0	; 160
 4da:	99 e0       	ldi	r25, 0x09	; 9
 4dc:	2c eb       	ldi	r18, 0xBC	; 188
 4de:	fc 01       	movw	r30, r24
 4e0:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio;
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e2       	ldi	r25, 0x20	; 32
 4e6:	80 93 24 20 	sts	0x2024, r24
 4ea:	90 93 25 20 	sts	0x2025, r25
	stdin=&UsartStdio;
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e2       	ldi	r25, 0x20	; 32
 4f2:	80 93 22 20 	sts	0x2022, r24
 4f6:	90 93 23 20 	sts	0x2023, r25
}
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	08 95       	ret

00000500 <stdio_putchar>:


static int stdio_putchar(char c, FILE * stream)
{
 500:	cf 93       	push	r28
 502:	df 93       	push	r29
 504:	00 d0       	rcall	.+0      	; 0x506 <stdio_putchar+0x6>
 506:	1f 92       	push	r1
 508:	cd b7       	in	r28, 0x3d	; 61
 50a:	de b7       	in	r29, 0x3e	; 62
 50c:	89 83       	std	Y+1, r24	; 0x01
 50e:	6a 83       	std	Y+2, r22	; 0x02
 510:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = c;
 512:	80 ea       	ldi	r24, 0xA0	; 160
 514:	99 e0       	ldi	r25, 0x09	; 9
 516:	29 81       	ldd	r18, Y+1	; 0x01
 518:	fc 01       	movw	r30, r24
 51a:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000));
 51c:	00 00       	nop
 51e:	80 ea       	ldi	r24, 0xA0	; 160
 520:	99 e0       	ldi	r25, 0x09	; 9
 522:	fc 01       	movw	r30, r24
 524:	81 81       	ldd	r24, Z+1	; 0x01
 526:	88 2f       	mov	r24, r24
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	80 74       	andi	r24, 0x40	; 64
 52c:	99 27       	eor	r25, r25
 52e:	00 97       	sbiw	r24, 0x00	; 0
 530:	b1 f3       	breq	.-20     	; 0x51e <stdio_putchar+0x1e>
	USART.STATUS=0b01000000;
 532:	80 ea       	ldi	r24, 0xA0	; 160
 534:	99 e0       	ldi	r25, 0x09	; 9
 536:	20 e4       	ldi	r18, 0x40	; 64
 538:	fc 01       	movw	r30, r24
 53a:	21 83       	std	Z+1, r18	; 0x01
	return 0;
 53c:	80 e0       	ldi	r24, 0x00	; 0
 53e:	90 e0       	ldi	r25, 0x00	; 0
}
 540:	23 96       	adiw	r28, 0x03	; 3
 542:	cd bf       	out	0x3d, r28	; 61
 544:	de bf       	out	0x3e, r29	; 62
 546:	df 91       	pop	r29
 548:	cf 91       	pop	r28
 54a:	08 95       	ret

0000054c <stdio_getchar>:
	
static int stdio_getchar(FILE *stream)
{
 54c:	cf 93       	push	r28
 54e:	df 93       	push	r29
 550:	00 d0       	rcall	.+0      	; 0x552 <stdio_getchar+0x6>
 552:	cd b7       	in	r28, 0x3d	; 61
 554:	de b7       	in	r29, 0x3e	; 62
 556:	89 83       	std	Y+1, r24	; 0x01
 558:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000));
 55a:	00 00       	nop
 55c:	80 ea       	ldi	r24, 0xA0	; 160
 55e:	99 e0       	ldi	r25, 0x09	; 9
 560:	fc 01       	movw	r30, r24
 562:	81 81       	ldd	r24, Z+1	; 0x01
 564:	88 23       	and	r24, r24
 566:	d4 f7       	brge	.-12     	; 0x55c <stdio_getchar+0x10>
	return USART.DATA;
 568:	80 ea       	ldi	r24, 0xA0	; 160
 56a:	99 e0       	ldi	r25, 0x09	; 9
 56c:	fc 01       	movw	r30, r24
 56e:	80 81       	ld	r24, Z
 570:	88 2f       	mov	r24, r24
 572:	90 e0       	ldi	r25, 0x00	; 0
}
 574:	0f 90       	pop	r0
 576:	0f 90       	pop	r0
 578:	df 91       	pop	r29
 57a:	cf 91       	pop	r28
 57c:	08 95       	ret

0000057e <__cmpsf2>:
 57e:	2f d0       	rcall	.+94     	; 0x5de <__fp_cmp>
 580:	08 f4       	brcc	.+2      	; 0x584 <__cmpsf2+0x6>
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	08 95       	ret

00000586 <__fixunssfsi>:
 586:	57 d0       	rcall	.+174    	; 0x636 <__fp_splitA>
 588:	88 f0       	brcs	.+34     	; 0x5ac <__fixunssfsi+0x26>
 58a:	9f 57       	subi	r25, 0x7F	; 127
 58c:	90 f0       	brcs	.+36     	; 0x5b2 <__fixunssfsi+0x2c>
 58e:	b9 2f       	mov	r27, r25
 590:	99 27       	eor	r25, r25
 592:	b7 51       	subi	r27, 0x17	; 23
 594:	a0 f0       	brcs	.+40     	; 0x5be <__fixunssfsi+0x38>
 596:	d1 f0       	breq	.+52     	; 0x5cc <__fixunssfsi+0x46>
 598:	66 0f       	add	r22, r22
 59a:	77 1f       	adc	r23, r23
 59c:	88 1f       	adc	r24, r24
 59e:	99 1f       	adc	r25, r25
 5a0:	1a f0       	brmi	.+6      	; 0x5a8 <__fixunssfsi+0x22>
 5a2:	ba 95       	dec	r27
 5a4:	c9 f7       	brne	.-14     	; 0x598 <__fixunssfsi+0x12>
 5a6:	12 c0       	rjmp	.+36     	; 0x5cc <__fixunssfsi+0x46>
 5a8:	b1 30       	cpi	r27, 0x01	; 1
 5aa:	81 f0       	breq	.+32     	; 0x5cc <__fixunssfsi+0x46>
 5ac:	5e d0       	rcall	.+188    	; 0x66a <__fp_zero>
 5ae:	b1 e0       	ldi	r27, 0x01	; 1
 5b0:	08 95       	ret
 5b2:	5b c0       	rjmp	.+182    	; 0x66a <__fp_zero>
 5b4:	67 2f       	mov	r22, r23
 5b6:	78 2f       	mov	r23, r24
 5b8:	88 27       	eor	r24, r24
 5ba:	b8 5f       	subi	r27, 0xF8	; 248
 5bc:	39 f0       	breq	.+14     	; 0x5cc <__fixunssfsi+0x46>
 5be:	b9 3f       	cpi	r27, 0xF9	; 249
 5c0:	cc f3       	brlt	.-14     	; 0x5b4 <__fixunssfsi+0x2e>
 5c2:	86 95       	lsr	r24
 5c4:	77 95       	ror	r23
 5c6:	67 95       	ror	r22
 5c8:	b3 95       	inc	r27
 5ca:	d9 f7       	brne	.-10     	; 0x5c2 <__fixunssfsi+0x3c>
 5cc:	3e f4       	brtc	.+14     	; 0x5dc <__fixunssfsi+0x56>
 5ce:	90 95       	com	r25
 5d0:	80 95       	com	r24
 5d2:	70 95       	com	r23
 5d4:	61 95       	neg	r22
 5d6:	7f 4f       	sbci	r23, 0xFF	; 255
 5d8:	8f 4f       	sbci	r24, 0xFF	; 255
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	08 95       	ret

000005de <__fp_cmp>:
 5de:	99 0f       	add	r25, r25
 5e0:	00 08       	sbc	r0, r0
 5e2:	55 0f       	add	r21, r21
 5e4:	aa 0b       	sbc	r26, r26
 5e6:	e0 e8       	ldi	r30, 0x80	; 128
 5e8:	fe ef       	ldi	r31, 0xFE	; 254
 5ea:	16 16       	cp	r1, r22
 5ec:	17 06       	cpc	r1, r23
 5ee:	e8 07       	cpc	r30, r24
 5f0:	f9 07       	cpc	r31, r25
 5f2:	c0 f0       	brcs	.+48     	; 0x624 <__fp_cmp+0x46>
 5f4:	12 16       	cp	r1, r18
 5f6:	13 06       	cpc	r1, r19
 5f8:	e4 07       	cpc	r30, r20
 5fa:	f5 07       	cpc	r31, r21
 5fc:	98 f0       	brcs	.+38     	; 0x624 <__fp_cmp+0x46>
 5fe:	62 1b       	sub	r22, r18
 600:	73 0b       	sbc	r23, r19
 602:	84 0b       	sbc	r24, r20
 604:	95 0b       	sbc	r25, r21
 606:	39 f4       	brne	.+14     	; 0x616 <__fp_cmp+0x38>
 608:	0a 26       	eor	r0, r26
 60a:	61 f0       	breq	.+24     	; 0x624 <__fp_cmp+0x46>
 60c:	23 2b       	or	r18, r19
 60e:	24 2b       	or	r18, r20
 610:	25 2b       	or	r18, r21
 612:	21 f4       	brne	.+8      	; 0x61c <__fp_cmp+0x3e>
 614:	08 95       	ret
 616:	0a 26       	eor	r0, r26
 618:	09 f4       	brne	.+2      	; 0x61c <__fp_cmp+0x3e>
 61a:	a1 40       	sbci	r26, 0x01	; 1
 61c:	a6 95       	lsr	r26
 61e:	8f ef       	ldi	r24, 0xFF	; 255
 620:	81 1d       	adc	r24, r1
 622:	81 1d       	adc	r24, r1
 624:	08 95       	ret

00000626 <__fp_split3>:
 626:	57 fd       	sbrc	r21, 7
 628:	90 58       	subi	r25, 0x80	; 128
 62a:	44 0f       	add	r20, r20
 62c:	55 1f       	adc	r21, r21
 62e:	59 f0       	breq	.+22     	; 0x646 <__fp_splitA+0x10>
 630:	5f 3f       	cpi	r21, 0xFF	; 255
 632:	71 f0       	breq	.+28     	; 0x650 <__fp_splitA+0x1a>
 634:	47 95       	ror	r20

00000636 <__fp_splitA>:
 636:	88 0f       	add	r24, r24
 638:	97 fb       	bst	r25, 7
 63a:	99 1f       	adc	r25, r25
 63c:	61 f0       	breq	.+24     	; 0x656 <__fp_splitA+0x20>
 63e:	9f 3f       	cpi	r25, 0xFF	; 255
 640:	79 f0       	breq	.+30     	; 0x660 <__fp_splitA+0x2a>
 642:	87 95       	ror	r24
 644:	08 95       	ret
 646:	12 16       	cp	r1, r18
 648:	13 06       	cpc	r1, r19
 64a:	14 06       	cpc	r1, r20
 64c:	55 1f       	adc	r21, r21
 64e:	f2 cf       	rjmp	.-28     	; 0x634 <__fp_split3+0xe>
 650:	46 95       	lsr	r20
 652:	f1 df       	rcall	.-30     	; 0x636 <__fp_splitA>
 654:	08 c0       	rjmp	.+16     	; 0x666 <__fp_splitA+0x30>
 656:	16 16       	cp	r1, r22
 658:	17 06       	cpc	r1, r23
 65a:	18 06       	cpc	r1, r24
 65c:	99 1f       	adc	r25, r25
 65e:	f1 cf       	rjmp	.-30     	; 0x642 <__fp_splitA+0xc>
 660:	86 95       	lsr	r24
 662:	71 05       	cpc	r23, r1
 664:	61 05       	cpc	r22, r1
 666:	08 94       	sec
 668:	08 95       	ret

0000066a <__fp_zero>:
 66a:	e8 94       	clt

0000066c <__fp_szero>:
 66c:	bb 27       	eor	r27, r27
 66e:	66 27       	eor	r22, r22
 670:	77 27       	eor	r23, r23
 672:	cb 01       	movw	r24, r22
 674:	97 f9       	bld	r25, 7
 676:	08 95       	ret

00000678 <__gesf2>:
 678:	b2 df       	rcall	.-156    	; 0x5de <__fp_cmp>
 67a:	08 f4       	brcc	.+2      	; 0x67e <__gesf2+0x6>
 67c:	8f ef       	ldi	r24, 0xFF	; 255
 67e:	08 95       	ret

00000680 <__mulsf3>:
 680:	0b d0       	rcall	.+22     	; 0x698 <__mulsf3x>
 682:	78 c0       	rjmp	.+240    	; 0x774 <__fp_round>
 684:	69 d0       	rcall	.+210    	; 0x758 <__fp_pscA>
 686:	28 f0       	brcs	.+10     	; 0x692 <__mulsf3+0x12>
 688:	6e d0       	rcall	.+220    	; 0x766 <__fp_pscB>
 68a:	18 f0       	brcs	.+6      	; 0x692 <__mulsf3+0x12>
 68c:	95 23       	and	r25, r21
 68e:	09 f0       	breq	.+2      	; 0x692 <__mulsf3+0x12>
 690:	5a c0       	rjmp	.+180    	; 0x746 <__fp_inf>
 692:	5f c0       	rjmp	.+190    	; 0x752 <__fp_nan>
 694:	11 24       	eor	r1, r1
 696:	ea cf       	rjmp	.-44     	; 0x66c <__fp_szero>

00000698 <__mulsf3x>:
 698:	c6 df       	rcall	.-116    	; 0x626 <__fp_split3>
 69a:	a0 f3       	brcs	.-24     	; 0x684 <__mulsf3+0x4>

0000069c <__mulsf3_pse>:
 69c:	95 9f       	mul	r25, r21
 69e:	d1 f3       	breq	.-12     	; 0x694 <__mulsf3+0x14>
 6a0:	95 0f       	add	r25, r21
 6a2:	50 e0       	ldi	r21, 0x00	; 0
 6a4:	55 1f       	adc	r21, r21
 6a6:	62 9f       	mul	r22, r18
 6a8:	f0 01       	movw	r30, r0
 6aa:	72 9f       	mul	r23, r18
 6ac:	bb 27       	eor	r27, r27
 6ae:	f0 0d       	add	r31, r0
 6b0:	b1 1d       	adc	r27, r1
 6b2:	63 9f       	mul	r22, r19
 6b4:	aa 27       	eor	r26, r26
 6b6:	f0 0d       	add	r31, r0
 6b8:	b1 1d       	adc	r27, r1
 6ba:	aa 1f       	adc	r26, r26
 6bc:	64 9f       	mul	r22, r20
 6be:	66 27       	eor	r22, r22
 6c0:	b0 0d       	add	r27, r0
 6c2:	a1 1d       	adc	r26, r1
 6c4:	66 1f       	adc	r22, r22
 6c6:	82 9f       	mul	r24, r18
 6c8:	22 27       	eor	r18, r18
 6ca:	b0 0d       	add	r27, r0
 6cc:	a1 1d       	adc	r26, r1
 6ce:	62 1f       	adc	r22, r18
 6d0:	73 9f       	mul	r23, r19
 6d2:	b0 0d       	add	r27, r0
 6d4:	a1 1d       	adc	r26, r1
 6d6:	62 1f       	adc	r22, r18
 6d8:	83 9f       	mul	r24, r19
 6da:	a0 0d       	add	r26, r0
 6dc:	61 1d       	adc	r22, r1
 6de:	22 1f       	adc	r18, r18
 6e0:	74 9f       	mul	r23, r20
 6e2:	33 27       	eor	r19, r19
 6e4:	a0 0d       	add	r26, r0
 6e6:	61 1d       	adc	r22, r1
 6e8:	23 1f       	adc	r18, r19
 6ea:	84 9f       	mul	r24, r20
 6ec:	60 0d       	add	r22, r0
 6ee:	21 1d       	adc	r18, r1
 6f0:	82 2f       	mov	r24, r18
 6f2:	76 2f       	mov	r23, r22
 6f4:	6a 2f       	mov	r22, r26
 6f6:	11 24       	eor	r1, r1
 6f8:	9f 57       	subi	r25, 0x7F	; 127
 6fa:	50 40       	sbci	r21, 0x00	; 0
 6fc:	8a f0       	brmi	.+34     	; 0x720 <__mulsf3_pse+0x84>
 6fe:	e1 f0       	breq	.+56     	; 0x738 <__mulsf3_pse+0x9c>
 700:	88 23       	and	r24, r24
 702:	4a f0       	brmi	.+18     	; 0x716 <__mulsf3_pse+0x7a>
 704:	ee 0f       	add	r30, r30
 706:	ff 1f       	adc	r31, r31
 708:	bb 1f       	adc	r27, r27
 70a:	66 1f       	adc	r22, r22
 70c:	77 1f       	adc	r23, r23
 70e:	88 1f       	adc	r24, r24
 710:	91 50       	subi	r25, 0x01	; 1
 712:	50 40       	sbci	r21, 0x00	; 0
 714:	a9 f7       	brne	.-22     	; 0x700 <__mulsf3_pse+0x64>
 716:	9e 3f       	cpi	r25, 0xFE	; 254
 718:	51 05       	cpc	r21, r1
 71a:	70 f0       	brcs	.+28     	; 0x738 <__mulsf3_pse+0x9c>
 71c:	14 c0       	rjmp	.+40     	; 0x746 <__fp_inf>
 71e:	a6 cf       	rjmp	.-180    	; 0x66c <__fp_szero>
 720:	5f 3f       	cpi	r21, 0xFF	; 255
 722:	ec f3       	brlt	.-6      	; 0x71e <__mulsf3_pse+0x82>
 724:	98 3e       	cpi	r25, 0xE8	; 232
 726:	dc f3       	brlt	.-10     	; 0x71e <__mulsf3_pse+0x82>
 728:	86 95       	lsr	r24
 72a:	77 95       	ror	r23
 72c:	67 95       	ror	r22
 72e:	b7 95       	ror	r27
 730:	f7 95       	ror	r31
 732:	e7 95       	ror	r30
 734:	9f 5f       	subi	r25, 0xFF	; 255
 736:	c1 f7       	brne	.-16     	; 0x728 <__mulsf3_pse+0x8c>
 738:	fe 2b       	or	r31, r30
 73a:	88 0f       	add	r24, r24
 73c:	91 1d       	adc	r25, r1
 73e:	96 95       	lsr	r25
 740:	87 95       	ror	r24
 742:	97 f9       	bld	r25, 7
 744:	08 95       	ret

00000746 <__fp_inf>:
 746:	97 f9       	bld	r25, 7
 748:	9f 67       	ori	r25, 0x7F	; 127
 74a:	80 e8       	ldi	r24, 0x80	; 128
 74c:	70 e0       	ldi	r23, 0x00	; 0
 74e:	60 e0       	ldi	r22, 0x00	; 0
 750:	08 95       	ret

00000752 <__fp_nan>:
 752:	9f ef       	ldi	r25, 0xFF	; 255
 754:	80 ec       	ldi	r24, 0xC0	; 192
 756:	08 95       	ret

00000758 <__fp_pscA>:
 758:	00 24       	eor	r0, r0
 75a:	0a 94       	dec	r0
 75c:	16 16       	cp	r1, r22
 75e:	17 06       	cpc	r1, r23
 760:	18 06       	cpc	r1, r24
 762:	09 06       	cpc	r0, r25
 764:	08 95       	ret

00000766 <__fp_pscB>:
 766:	00 24       	eor	r0, r0
 768:	0a 94       	dec	r0
 76a:	12 16       	cp	r1, r18
 76c:	13 06       	cpc	r1, r19
 76e:	14 06       	cpc	r1, r20
 770:	05 06       	cpc	r0, r21
 772:	08 95       	ret

00000774 <__fp_round>:
 774:	09 2e       	mov	r0, r25
 776:	03 94       	inc	r0
 778:	00 0c       	add	r0, r0
 77a:	11 f4       	brne	.+4      	; 0x780 <__fp_round+0xc>
 77c:	88 23       	and	r24, r24
 77e:	52 f0       	brmi	.+20     	; 0x794 <__fp_round+0x20>
 780:	bb 0f       	add	r27, r27
 782:	40 f4       	brcc	.+16     	; 0x794 <__fp_round+0x20>
 784:	bf 2b       	or	r27, r31
 786:	11 f4       	brne	.+4      	; 0x78c <__fp_round+0x18>
 788:	60 ff       	sbrs	r22, 0
 78a:	04 c0       	rjmp	.+8      	; 0x794 <__fp_round+0x20>
 78c:	6f 5f       	subi	r22, 0xFF	; 255
 78e:	7f 4f       	sbci	r23, 0xFF	; 255
 790:	8f 4f       	sbci	r24, 0xFF	; 255
 792:	9f 4f       	sbci	r25, 0xFF	; 255
 794:	08 95       	ret

00000796 <printf>:
 796:	a0 e0       	ldi	r26, 0x00	; 0
 798:	b0 e0       	ldi	r27, 0x00	; 0
 79a:	e1 ed       	ldi	r30, 0xD1	; 209
 79c:	f3 e0       	ldi	r31, 0x03	; 3
 79e:	0c 94 67 06 	jmp	0xcce	; 0xcce <__prologue_saves__+0x20>
 7a2:	fe 01       	movw	r30, r28
 7a4:	35 96       	adiw	r30, 0x05	; 5
 7a6:	61 91       	ld	r22, Z+
 7a8:	71 91       	ld	r23, Z+
 7aa:	af 01       	movw	r20, r30
 7ac:	80 91 24 20 	lds	r24, 0x2024
 7b0:	90 91 25 20 	lds	r25, 0x2025
 7b4:	0e 94 df 03 	call	0x7be	; 0x7be <vfprintf>
 7b8:	e2 e0       	ldi	r30, 0x02	; 2
 7ba:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__epilogue_restores__+0x20>

000007be <vfprintf>:
 7be:	ac e0       	ldi	r26, 0x0C	; 12
 7c0:	b0 e0       	ldi	r27, 0x00	; 0
 7c2:	e5 ee       	ldi	r30, 0xE5	; 229
 7c4:	f3 e0       	ldi	r31, 0x03	; 3
 7c6:	0c 94 57 06 	jmp	0xcae	; 0xcae <__prologue_saves__>
 7ca:	7c 01       	movw	r14, r24
 7cc:	6b 01       	movw	r12, r22
 7ce:	8a 01       	movw	r16, r20
 7d0:	fc 01       	movw	r30, r24
 7d2:	16 82       	std	Z+6, r1	; 0x06
 7d4:	17 82       	std	Z+7, r1	; 0x07
 7d6:	83 81       	ldd	r24, Z+3	; 0x03
 7d8:	81 ff       	sbrs	r24, 1
 7da:	bd c1       	rjmp	.+890    	; 0xb56 <vfprintf+0x398>
 7dc:	ce 01       	movw	r24, r28
 7de:	01 96       	adiw	r24, 0x01	; 1
 7e0:	4c 01       	movw	r8, r24
 7e2:	f7 01       	movw	r30, r14
 7e4:	93 81       	ldd	r25, Z+3	; 0x03
 7e6:	f6 01       	movw	r30, r12
 7e8:	93 fd       	sbrc	r25, 3
 7ea:	85 91       	lpm	r24, Z+
 7ec:	93 ff       	sbrs	r25, 3
 7ee:	81 91       	ld	r24, Z+
 7f0:	6f 01       	movw	r12, r30
 7f2:	88 23       	and	r24, r24
 7f4:	09 f4       	brne	.+2      	; 0x7f8 <vfprintf+0x3a>
 7f6:	ab c1       	rjmp	.+854    	; 0xb4e <vfprintf+0x390>
 7f8:	85 32       	cpi	r24, 0x25	; 37
 7fa:	39 f4       	brne	.+14     	; 0x80a <vfprintf+0x4c>
 7fc:	93 fd       	sbrc	r25, 3
 7fe:	85 91       	lpm	r24, Z+
 800:	93 ff       	sbrs	r25, 3
 802:	81 91       	ld	r24, Z+
 804:	6f 01       	movw	r12, r30
 806:	85 32       	cpi	r24, 0x25	; 37
 808:	29 f4       	brne	.+10     	; 0x814 <vfprintf+0x56>
 80a:	b7 01       	movw	r22, r14
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 812:	e7 cf       	rjmp	.-50     	; 0x7e2 <vfprintf+0x24>
 814:	51 2c       	mov	r5, r1
 816:	31 2c       	mov	r3, r1
 818:	20 e0       	ldi	r18, 0x00	; 0
 81a:	20 32       	cpi	r18, 0x20	; 32
 81c:	a0 f4       	brcc	.+40     	; 0x846 <vfprintf+0x88>
 81e:	8b 32       	cpi	r24, 0x2B	; 43
 820:	69 f0       	breq	.+26     	; 0x83c <vfprintf+0x7e>
 822:	30 f4       	brcc	.+12     	; 0x830 <vfprintf+0x72>
 824:	80 32       	cpi	r24, 0x20	; 32
 826:	59 f0       	breq	.+22     	; 0x83e <vfprintf+0x80>
 828:	83 32       	cpi	r24, 0x23	; 35
 82a:	69 f4       	brne	.+26     	; 0x846 <vfprintf+0x88>
 82c:	20 61       	ori	r18, 0x10	; 16
 82e:	2c c0       	rjmp	.+88     	; 0x888 <vfprintf+0xca>
 830:	8d 32       	cpi	r24, 0x2D	; 45
 832:	39 f0       	breq	.+14     	; 0x842 <vfprintf+0x84>
 834:	80 33       	cpi	r24, 0x30	; 48
 836:	39 f4       	brne	.+14     	; 0x846 <vfprintf+0x88>
 838:	21 60       	ori	r18, 0x01	; 1
 83a:	26 c0       	rjmp	.+76     	; 0x888 <vfprintf+0xca>
 83c:	22 60       	ori	r18, 0x02	; 2
 83e:	24 60       	ori	r18, 0x04	; 4
 840:	23 c0       	rjmp	.+70     	; 0x888 <vfprintf+0xca>
 842:	28 60       	ori	r18, 0x08	; 8
 844:	21 c0       	rjmp	.+66     	; 0x888 <vfprintf+0xca>
 846:	27 fd       	sbrc	r18, 7
 848:	27 c0       	rjmp	.+78     	; 0x898 <vfprintf+0xda>
 84a:	30 ed       	ldi	r19, 0xD0	; 208
 84c:	38 0f       	add	r19, r24
 84e:	3a 30       	cpi	r19, 0x0A	; 10
 850:	78 f4       	brcc	.+30     	; 0x870 <vfprintf+0xb2>
 852:	26 ff       	sbrs	r18, 6
 854:	06 c0       	rjmp	.+12     	; 0x862 <vfprintf+0xa4>
 856:	fa e0       	ldi	r31, 0x0A	; 10
 858:	5f 9e       	mul	r5, r31
 85a:	30 0d       	add	r19, r0
 85c:	11 24       	eor	r1, r1
 85e:	53 2e       	mov	r5, r19
 860:	13 c0       	rjmp	.+38     	; 0x888 <vfprintf+0xca>
 862:	8a e0       	ldi	r24, 0x0A	; 10
 864:	38 9e       	mul	r3, r24
 866:	30 0d       	add	r19, r0
 868:	11 24       	eor	r1, r1
 86a:	33 2e       	mov	r3, r19
 86c:	20 62       	ori	r18, 0x20	; 32
 86e:	0c c0       	rjmp	.+24     	; 0x888 <vfprintf+0xca>
 870:	8e 32       	cpi	r24, 0x2E	; 46
 872:	21 f4       	brne	.+8      	; 0x87c <vfprintf+0xbe>
 874:	26 fd       	sbrc	r18, 6
 876:	6b c1       	rjmp	.+726    	; 0xb4e <vfprintf+0x390>
 878:	20 64       	ori	r18, 0x40	; 64
 87a:	06 c0       	rjmp	.+12     	; 0x888 <vfprintf+0xca>
 87c:	8c 36       	cpi	r24, 0x6C	; 108
 87e:	11 f4       	brne	.+4      	; 0x884 <vfprintf+0xc6>
 880:	20 68       	ori	r18, 0x80	; 128
 882:	02 c0       	rjmp	.+4      	; 0x888 <vfprintf+0xca>
 884:	88 36       	cpi	r24, 0x68	; 104
 886:	41 f4       	brne	.+16     	; 0x898 <vfprintf+0xda>
 888:	f6 01       	movw	r30, r12
 88a:	93 fd       	sbrc	r25, 3
 88c:	85 91       	lpm	r24, Z+
 88e:	93 ff       	sbrs	r25, 3
 890:	81 91       	ld	r24, Z+
 892:	6f 01       	movw	r12, r30
 894:	81 11       	cpse	r24, r1
 896:	c1 cf       	rjmp	.-126    	; 0x81a <vfprintf+0x5c>
 898:	98 2f       	mov	r25, r24
 89a:	9f 7d       	andi	r25, 0xDF	; 223
 89c:	95 54       	subi	r25, 0x45	; 69
 89e:	93 30       	cpi	r25, 0x03	; 3
 8a0:	28 f4       	brcc	.+10     	; 0x8ac <vfprintf+0xee>
 8a2:	0c 5f       	subi	r16, 0xFC	; 252
 8a4:	1f 4f       	sbci	r17, 0xFF	; 255
 8a6:	ff e3       	ldi	r31, 0x3F	; 63
 8a8:	f9 83       	std	Y+1, r31	; 0x01
 8aa:	0d c0       	rjmp	.+26     	; 0x8c6 <vfprintf+0x108>
 8ac:	83 36       	cpi	r24, 0x63	; 99
 8ae:	31 f0       	breq	.+12     	; 0x8bc <vfprintf+0xfe>
 8b0:	83 37       	cpi	r24, 0x73	; 115
 8b2:	71 f0       	breq	.+28     	; 0x8d0 <vfprintf+0x112>
 8b4:	83 35       	cpi	r24, 0x53	; 83
 8b6:	09 f0       	breq	.+2      	; 0x8ba <vfprintf+0xfc>
 8b8:	5b c0       	rjmp	.+182    	; 0x970 <vfprintf+0x1b2>
 8ba:	22 c0       	rjmp	.+68     	; 0x900 <vfprintf+0x142>
 8bc:	f8 01       	movw	r30, r16
 8be:	80 81       	ld	r24, Z
 8c0:	89 83       	std	Y+1, r24	; 0x01
 8c2:	0e 5f       	subi	r16, 0xFE	; 254
 8c4:	1f 4f       	sbci	r17, 0xFF	; 255
 8c6:	44 24       	eor	r4, r4
 8c8:	43 94       	inc	r4
 8ca:	51 2c       	mov	r5, r1
 8cc:	54 01       	movw	r10, r8
 8ce:	15 c0       	rjmp	.+42     	; 0x8fa <vfprintf+0x13c>
 8d0:	38 01       	movw	r6, r16
 8d2:	f2 e0       	ldi	r31, 0x02	; 2
 8d4:	6f 0e       	add	r6, r31
 8d6:	71 1c       	adc	r7, r1
 8d8:	f8 01       	movw	r30, r16
 8da:	a0 80       	ld	r10, Z
 8dc:	b1 80       	ldd	r11, Z+1	; 0x01
 8de:	26 ff       	sbrs	r18, 6
 8e0:	03 c0       	rjmp	.+6      	; 0x8e8 <vfprintf+0x12a>
 8e2:	65 2d       	mov	r22, r5
 8e4:	70 e0       	ldi	r23, 0x00	; 0
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <vfprintf+0x12e>
 8e8:	6f ef       	ldi	r22, 0xFF	; 255
 8ea:	7f ef       	ldi	r23, 0xFF	; 255
 8ec:	c5 01       	movw	r24, r10
 8ee:	2c 87       	std	Y+12, r18	; 0x0c
 8f0:	0e 94 bc 05 	call	0xb78	; 0xb78 <strnlen>
 8f4:	2c 01       	movw	r4, r24
 8f6:	83 01       	movw	r16, r6
 8f8:	2c 85       	ldd	r18, Y+12	; 0x0c
 8fa:	2f 77       	andi	r18, 0x7F	; 127
 8fc:	22 2e       	mov	r2, r18
 8fe:	17 c0       	rjmp	.+46     	; 0x92e <vfprintf+0x170>
 900:	38 01       	movw	r6, r16
 902:	f2 e0       	ldi	r31, 0x02	; 2
 904:	6f 0e       	add	r6, r31
 906:	71 1c       	adc	r7, r1
 908:	f8 01       	movw	r30, r16
 90a:	a0 80       	ld	r10, Z
 90c:	b1 80       	ldd	r11, Z+1	; 0x01
 90e:	26 ff       	sbrs	r18, 6
 910:	03 c0       	rjmp	.+6      	; 0x918 <vfprintf+0x15a>
 912:	65 2d       	mov	r22, r5
 914:	70 e0       	ldi	r23, 0x00	; 0
 916:	02 c0       	rjmp	.+4      	; 0x91c <vfprintf+0x15e>
 918:	6f ef       	ldi	r22, 0xFF	; 255
 91a:	7f ef       	ldi	r23, 0xFF	; 255
 91c:	c5 01       	movw	r24, r10
 91e:	2c 87       	std	Y+12, r18	; 0x0c
 920:	0e 94 b1 05 	call	0xb62	; 0xb62 <strnlen_P>
 924:	2c 01       	movw	r4, r24
 926:	2c 85       	ldd	r18, Y+12	; 0x0c
 928:	20 68       	ori	r18, 0x80	; 128
 92a:	22 2e       	mov	r2, r18
 92c:	83 01       	movw	r16, r6
 92e:	23 fc       	sbrc	r2, 3
 930:	1b c0       	rjmp	.+54     	; 0x968 <vfprintf+0x1aa>
 932:	83 2d       	mov	r24, r3
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	48 16       	cp	r4, r24
 938:	59 06       	cpc	r5, r25
 93a:	b0 f4       	brcc	.+44     	; 0x968 <vfprintf+0x1aa>
 93c:	b7 01       	movw	r22, r14
 93e:	80 e2       	ldi	r24, 0x20	; 32
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 946:	3a 94       	dec	r3
 948:	f4 cf       	rjmp	.-24     	; 0x932 <vfprintf+0x174>
 94a:	f5 01       	movw	r30, r10
 94c:	27 fc       	sbrc	r2, 7
 94e:	85 91       	lpm	r24, Z+
 950:	27 fe       	sbrs	r2, 7
 952:	81 91       	ld	r24, Z+
 954:	5f 01       	movw	r10, r30
 956:	b7 01       	movw	r22, r14
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 95e:	31 10       	cpse	r3, r1
 960:	3a 94       	dec	r3
 962:	f1 e0       	ldi	r31, 0x01	; 1
 964:	4f 1a       	sub	r4, r31
 966:	51 08       	sbc	r5, r1
 968:	41 14       	cp	r4, r1
 96a:	51 04       	cpc	r5, r1
 96c:	71 f7       	brne	.-36     	; 0x94a <vfprintf+0x18c>
 96e:	e5 c0       	rjmp	.+458    	; 0xb3a <vfprintf+0x37c>
 970:	84 36       	cpi	r24, 0x64	; 100
 972:	11 f0       	breq	.+4      	; 0x978 <vfprintf+0x1ba>
 974:	89 36       	cpi	r24, 0x69	; 105
 976:	39 f5       	brne	.+78     	; 0x9c6 <vfprintf+0x208>
 978:	f8 01       	movw	r30, r16
 97a:	27 ff       	sbrs	r18, 7
 97c:	07 c0       	rjmp	.+14     	; 0x98c <vfprintf+0x1ce>
 97e:	60 81       	ld	r22, Z
 980:	71 81       	ldd	r23, Z+1	; 0x01
 982:	82 81       	ldd	r24, Z+2	; 0x02
 984:	93 81       	ldd	r25, Z+3	; 0x03
 986:	0c 5f       	subi	r16, 0xFC	; 252
 988:	1f 4f       	sbci	r17, 0xFF	; 255
 98a:	08 c0       	rjmp	.+16     	; 0x99c <vfprintf+0x1de>
 98c:	60 81       	ld	r22, Z
 98e:	71 81       	ldd	r23, Z+1	; 0x01
 990:	88 27       	eor	r24, r24
 992:	77 fd       	sbrc	r23, 7
 994:	80 95       	com	r24
 996:	98 2f       	mov	r25, r24
 998:	0e 5f       	subi	r16, 0xFE	; 254
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	2f 76       	andi	r18, 0x6F	; 111
 99e:	b2 2e       	mov	r11, r18
 9a0:	97 ff       	sbrs	r25, 7
 9a2:	09 c0       	rjmp	.+18     	; 0x9b6 <vfprintf+0x1f8>
 9a4:	90 95       	com	r25
 9a6:	80 95       	com	r24
 9a8:	70 95       	com	r23
 9aa:	61 95       	neg	r22
 9ac:	7f 4f       	sbci	r23, 0xFF	; 255
 9ae:	8f 4f       	sbci	r24, 0xFF	; 255
 9b0:	9f 4f       	sbci	r25, 0xFF	; 255
 9b2:	20 68       	ori	r18, 0x80	; 128
 9b4:	b2 2e       	mov	r11, r18
 9b6:	2a e0       	ldi	r18, 0x0A	; 10
 9b8:	30 e0       	ldi	r19, 0x00	; 0
 9ba:	a4 01       	movw	r20, r8
 9bc:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__ultoa_invert>
 9c0:	a8 2e       	mov	r10, r24
 9c2:	a8 18       	sub	r10, r8
 9c4:	44 c0       	rjmp	.+136    	; 0xa4e <vfprintf+0x290>
 9c6:	85 37       	cpi	r24, 0x75	; 117
 9c8:	29 f4       	brne	.+10     	; 0x9d4 <vfprintf+0x216>
 9ca:	2f 7e       	andi	r18, 0xEF	; 239
 9cc:	b2 2e       	mov	r11, r18
 9ce:	2a e0       	ldi	r18, 0x0A	; 10
 9d0:	30 e0       	ldi	r19, 0x00	; 0
 9d2:	25 c0       	rjmp	.+74     	; 0xa1e <vfprintf+0x260>
 9d4:	f2 2f       	mov	r31, r18
 9d6:	f9 7f       	andi	r31, 0xF9	; 249
 9d8:	bf 2e       	mov	r11, r31
 9da:	8f 36       	cpi	r24, 0x6F	; 111
 9dc:	c1 f0       	breq	.+48     	; 0xa0e <vfprintf+0x250>
 9de:	18 f4       	brcc	.+6      	; 0x9e6 <vfprintf+0x228>
 9e0:	88 35       	cpi	r24, 0x58	; 88
 9e2:	79 f0       	breq	.+30     	; 0xa02 <vfprintf+0x244>
 9e4:	b4 c0       	rjmp	.+360    	; 0xb4e <vfprintf+0x390>
 9e6:	80 37       	cpi	r24, 0x70	; 112
 9e8:	19 f0       	breq	.+6      	; 0x9f0 <vfprintf+0x232>
 9ea:	88 37       	cpi	r24, 0x78	; 120
 9ec:	21 f0       	breq	.+8      	; 0x9f6 <vfprintf+0x238>
 9ee:	af c0       	rjmp	.+350    	; 0xb4e <vfprintf+0x390>
 9f0:	2f 2f       	mov	r18, r31
 9f2:	20 61       	ori	r18, 0x10	; 16
 9f4:	b2 2e       	mov	r11, r18
 9f6:	b4 fe       	sbrs	r11, 4
 9f8:	0d c0       	rjmp	.+26     	; 0xa14 <vfprintf+0x256>
 9fa:	8b 2d       	mov	r24, r11
 9fc:	84 60       	ori	r24, 0x04	; 4
 9fe:	b8 2e       	mov	r11, r24
 a00:	09 c0       	rjmp	.+18     	; 0xa14 <vfprintf+0x256>
 a02:	24 ff       	sbrs	r18, 4
 a04:	0a c0       	rjmp	.+20     	; 0xa1a <vfprintf+0x25c>
 a06:	9f 2f       	mov	r25, r31
 a08:	96 60       	ori	r25, 0x06	; 6
 a0a:	b9 2e       	mov	r11, r25
 a0c:	06 c0       	rjmp	.+12     	; 0xa1a <vfprintf+0x25c>
 a0e:	28 e0       	ldi	r18, 0x08	; 8
 a10:	30 e0       	ldi	r19, 0x00	; 0
 a12:	05 c0       	rjmp	.+10     	; 0xa1e <vfprintf+0x260>
 a14:	20 e1       	ldi	r18, 0x10	; 16
 a16:	30 e0       	ldi	r19, 0x00	; 0
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <vfprintf+0x260>
 a1a:	20 e1       	ldi	r18, 0x10	; 16
 a1c:	32 e0       	ldi	r19, 0x02	; 2
 a1e:	f8 01       	movw	r30, r16
 a20:	b7 fe       	sbrs	r11, 7
 a22:	07 c0       	rjmp	.+14     	; 0xa32 <vfprintf+0x274>
 a24:	60 81       	ld	r22, Z
 a26:	71 81       	ldd	r23, Z+1	; 0x01
 a28:	82 81       	ldd	r24, Z+2	; 0x02
 a2a:	93 81       	ldd	r25, Z+3	; 0x03
 a2c:	0c 5f       	subi	r16, 0xFC	; 252
 a2e:	1f 4f       	sbci	r17, 0xFF	; 255
 a30:	06 c0       	rjmp	.+12     	; 0xa3e <vfprintf+0x280>
 a32:	60 81       	ld	r22, Z
 a34:	71 81       	ldd	r23, Z+1	; 0x01
 a36:	80 e0       	ldi	r24, 0x00	; 0
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 5f       	subi	r16, 0xFE	; 254
 a3c:	1f 4f       	sbci	r17, 0xFF	; 255
 a3e:	a4 01       	movw	r20, r8
 a40:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__ultoa_invert>
 a44:	a8 2e       	mov	r10, r24
 a46:	a8 18       	sub	r10, r8
 a48:	fb 2d       	mov	r31, r11
 a4a:	ff 77       	andi	r31, 0x7F	; 127
 a4c:	bf 2e       	mov	r11, r31
 a4e:	b6 fe       	sbrs	r11, 6
 a50:	0b c0       	rjmp	.+22     	; 0xa68 <vfprintf+0x2aa>
 a52:	2b 2d       	mov	r18, r11
 a54:	2e 7f       	andi	r18, 0xFE	; 254
 a56:	a5 14       	cp	r10, r5
 a58:	50 f4       	brcc	.+20     	; 0xa6e <vfprintf+0x2b0>
 a5a:	b4 fe       	sbrs	r11, 4
 a5c:	0a c0       	rjmp	.+20     	; 0xa72 <vfprintf+0x2b4>
 a5e:	b2 fc       	sbrc	r11, 2
 a60:	08 c0       	rjmp	.+16     	; 0xa72 <vfprintf+0x2b4>
 a62:	2b 2d       	mov	r18, r11
 a64:	2e 7e       	andi	r18, 0xEE	; 238
 a66:	05 c0       	rjmp	.+10     	; 0xa72 <vfprintf+0x2b4>
 a68:	7a 2c       	mov	r7, r10
 a6a:	2b 2d       	mov	r18, r11
 a6c:	03 c0       	rjmp	.+6      	; 0xa74 <vfprintf+0x2b6>
 a6e:	7a 2c       	mov	r7, r10
 a70:	01 c0       	rjmp	.+2      	; 0xa74 <vfprintf+0x2b6>
 a72:	75 2c       	mov	r7, r5
 a74:	24 ff       	sbrs	r18, 4
 a76:	0d c0       	rjmp	.+26     	; 0xa92 <vfprintf+0x2d4>
 a78:	fe 01       	movw	r30, r28
 a7a:	ea 0d       	add	r30, r10
 a7c:	f1 1d       	adc	r31, r1
 a7e:	80 81       	ld	r24, Z
 a80:	80 33       	cpi	r24, 0x30	; 48
 a82:	11 f4       	brne	.+4      	; 0xa88 <vfprintf+0x2ca>
 a84:	29 7e       	andi	r18, 0xE9	; 233
 a86:	09 c0       	rjmp	.+18     	; 0xa9a <vfprintf+0x2dc>
 a88:	22 ff       	sbrs	r18, 2
 a8a:	06 c0       	rjmp	.+12     	; 0xa98 <vfprintf+0x2da>
 a8c:	73 94       	inc	r7
 a8e:	73 94       	inc	r7
 a90:	04 c0       	rjmp	.+8      	; 0xa9a <vfprintf+0x2dc>
 a92:	82 2f       	mov	r24, r18
 a94:	86 78       	andi	r24, 0x86	; 134
 a96:	09 f0       	breq	.+2      	; 0xa9a <vfprintf+0x2dc>
 a98:	73 94       	inc	r7
 a9a:	23 fd       	sbrc	r18, 3
 a9c:	13 c0       	rjmp	.+38     	; 0xac4 <vfprintf+0x306>
 a9e:	20 ff       	sbrs	r18, 0
 aa0:	06 c0       	rjmp	.+12     	; 0xaae <vfprintf+0x2f0>
 aa2:	5a 2c       	mov	r5, r10
 aa4:	73 14       	cp	r7, r3
 aa6:	18 f4       	brcc	.+6      	; 0xaae <vfprintf+0x2f0>
 aa8:	53 0c       	add	r5, r3
 aaa:	57 18       	sub	r5, r7
 aac:	73 2c       	mov	r7, r3
 aae:	73 14       	cp	r7, r3
 ab0:	68 f4       	brcc	.+26     	; 0xacc <vfprintf+0x30e>
 ab2:	b7 01       	movw	r22, r14
 ab4:	80 e2       	ldi	r24, 0x20	; 32
 ab6:	90 e0       	ldi	r25, 0x00	; 0
 ab8:	2c 87       	std	Y+12, r18	; 0x0c
 aba:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 abe:	73 94       	inc	r7
 ac0:	2c 85       	ldd	r18, Y+12	; 0x0c
 ac2:	f5 cf       	rjmp	.-22     	; 0xaae <vfprintf+0x2f0>
 ac4:	73 14       	cp	r7, r3
 ac6:	10 f4       	brcc	.+4      	; 0xacc <vfprintf+0x30e>
 ac8:	37 18       	sub	r3, r7
 aca:	01 c0       	rjmp	.+2      	; 0xace <vfprintf+0x310>
 acc:	31 2c       	mov	r3, r1
 ace:	24 ff       	sbrs	r18, 4
 ad0:	12 c0       	rjmp	.+36     	; 0xaf6 <vfprintf+0x338>
 ad2:	b7 01       	movw	r22, r14
 ad4:	80 e3       	ldi	r24, 0x30	; 48
 ad6:	90 e0       	ldi	r25, 0x00	; 0
 ad8:	2c 87       	std	Y+12, r18	; 0x0c
 ada:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 ade:	2c 85       	ldd	r18, Y+12	; 0x0c
 ae0:	22 ff       	sbrs	r18, 2
 ae2:	17 c0       	rjmp	.+46     	; 0xb12 <vfprintf+0x354>
 ae4:	21 ff       	sbrs	r18, 1
 ae6:	03 c0       	rjmp	.+6      	; 0xaee <vfprintf+0x330>
 ae8:	88 e5       	ldi	r24, 0x58	; 88
 aea:	90 e0       	ldi	r25, 0x00	; 0
 aec:	02 c0       	rjmp	.+4      	; 0xaf2 <vfprintf+0x334>
 aee:	88 e7       	ldi	r24, 0x78	; 120
 af0:	90 e0       	ldi	r25, 0x00	; 0
 af2:	b7 01       	movw	r22, r14
 af4:	0c c0       	rjmp	.+24     	; 0xb0e <vfprintf+0x350>
 af6:	82 2f       	mov	r24, r18
 af8:	86 78       	andi	r24, 0x86	; 134
 afa:	59 f0       	breq	.+22     	; 0xb12 <vfprintf+0x354>
 afc:	21 fd       	sbrc	r18, 1
 afe:	02 c0       	rjmp	.+4      	; 0xb04 <vfprintf+0x346>
 b00:	80 e2       	ldi	r24, 0x20	; 32
 b02:	01 c0       	rjmp	.+2      	; 0xb06 <vfprintf+0x348>
 b04:	8b e2       	ldi	r24, 0x2B	; 43
 b06:	27 fd       	sbrc	r18, 7
 b08:	8d e2       	ldi	r24, 0x2D	; 45
 b0a:	b7 01       	movw	r22, r14
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b12:	a5 14       	cp	r10, r5
 b14:	38 f4       	brcc	.+14     	; 0xb24 <vfprintf+0x366>
 b16:	b7 01       	movw	r22, r14
 b18:	80 e3       	ldi	r24, 0x30	; 48
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b20:	5a 94       	dec	r5
 b22:	f7 cf       	rjmp	.-18     	; 0xb12 <vfprintf+0x354>
 b24:	aa 94       	dec	r10
 b26:	f4 01       	movw	r30, r8
 b28:	ea 0d       	add	r30, r10
 b2a:	f1 1d       	adc	r31, r1
 b2c:	80 81       	ld	r24, Z
 b2e:	b7 01       	movw	r22, r14
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b36:	a1 10       	cpse	r10, r1
 b38:	f5 cf       	rjmp	.-22     	; 0xb24 <vfprintf+0x366>
 b3a:	33 20       	and	r3, r3
 b3c:	09 f4       	brne	.+2      	; 0xb40 <vfprintf+0x382>
 b3e:	51 ce       	rjmp	.-862    	; 0x7e2 <vfprintf+0x24>
 b40:	b7 01       	movw	r22, r14
 b42:	80 e2       	ldi	r24, 0x20	; 32
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b4a:	3a 94       	dec	r3
 b4c:	f6 cf       	rjmp	.-20     	; 0xb3a <vfprintf+0x37c>
 b4e:	f7 01       	movw	r30, r14
 b50:	86 81       	ldd	r24, Z+6	; 0x06
 b52:	97 81       	ldd	r25, Z+7	; 0x07
 b54:	02 c0       	rjmp	.+4      	; 0xb5a <vfprintf+0x39c>
 b56:	8f ef       	ldi	r24, 0xFF	; 255
 b58:	9f ef       	ldi	r25, 0xFF	; 255
 b5a:	2c 96       	adiw	r28, 0x0c	; 12
 b5c:	e2 e1       	ldi	r30, 0x12	; 18
 b5e:	0c 94 70 06 	jmp	0xce0	; 0xce0 <__epilogue_restores__>

00000b62 <strnlen_P>:
 b62:	fc 01       	movw	r30, r24
 b64:	05 90       	lpm	r0, Z+
 b66:	61 50       	subi	r22, 0x01	; 1
 b68:	70 40       	sbci	r23, 0x00	; 0
 b6a:	01 10       	cpse	r0, r1
 b6c:	d8 f7       	brcc	.-10     	; 0xb64 <strnlen_P+0x2>
 b6e:	80 95       	com	r24
 b70:	90 95       	com	r25
 b72:	8e 0f       	add	r24, r30
 b74:	9f 1f       	adc	r25, r31
 b76:	08 95       	ret

00000b78 <strnlen>:
 b78:	fc 01       	movw	r30, r24
 b7a:	61 50       	subi	r22, 0x01	; 1
 b7c:	70 40       	sbci	r23, 0x00	; 0
 b7e:	01 90       	ld	r0, Z+
 b80:	01 10       	cpse	r0, r1
 b82:	d8 f7       	brcc	.-10     	; 0xb7a <strnlen+0x2>
 b84:	80 95       	com	r24
 b86:	90 95       	com	r25
 b88:	8e 0f       	add	r24, r30
 b8a:	9f 1f       	adc	r25, r31
 b8c:	08 95       	ret

00000b8e <fputc>:
 b8e:	0f 93       	push	r16
 b90:	1f 93       	push	r17
 b92:	cf 93       	push	r28
 b94:	df 93       	push	r29
 b96:	18 2f       	mov	r17, r24
 b98:	09 2f       	mov	r16, r25
 b9a:	eb 01       	movw	r28, r22
 b9c:	8b 81       	ldd	r24, Y+3	; 0x03
 b9e:	81 fd       	sbrc	r24, 1
 ba0:	03 c0       	rjmp	.+6      	; 0xba8 <fputc+0x1a>
 ba2:	8f ef       	ldi	r24, 0xFF	; 255
 ba4:	9f ef       	ldi	r25, 0xFF	; 255
 ba6:	20 c0       	rjmp	.+64     	; 0xbe8 <fputc+0x5a>
 ba8:	82 ff       	sbrs	r24, 2
 baa:	10 c0       	rjmp	.+32     	; 0xbcc <fputc+0x3e>
 bac:	4e 81       	ldd	r20, Y+6	; 0x06
 bae:	5f 81       	ldd	r21, Y+7	; 0x07
 bb0:	2c 81       	ldd	r18, Y+4	; 0x04
 bb2:	3d 81       	ldd	r19, Y+5	; 0x05
 bb4:	42 17       	cp	r20, r18
 bb6:	53 07       	cpc	r21, r19
 bb8:	7c f4       	brge	.+30     	; 0xbd8 <fputc+0x4a>
 bba:	e8 81       	ld	r30, Y
 bbc:	f9 81       	ldd	r31, Y+1	; 0x01
 bbe:	9f 01       	movw	r18, r30
 bc0:	2f 5f       	subi	r18, 0xFF	; 255
 bc2:	3f 4f       	sbci	r19, 0xFF	; 255
 bc4:	28 83       	st	Y, r18
 bc6:	39 83       	std	Y+1, r19	; 0x01
 bc8:	10 83       	st	Z, r17
 bca:	06 c0       	rjmp	.+12     	; 0xbd8 <fputc+0x4a>
 bcc:	e8 85       	ldd	r30, Y+8	; 0x08
 bce:	f9 85       	ldd	r31, Y+9	; 0x09
 bd0:	81 2f       	mov	r24, r17
 bd2:	09 95       	icall
 bd4:	89 2b       	or	r24, r25
 bd6:	29 f7       	brne	.-54     	; 0xba2 <fputc+0x14>
 bd8:	2e 81       	ldd	r18, Y+6	; 0x06
 bda:	3f 81       	ldd	r19, Y+7	; 0x07
 bdc:	2f 5f       	subi	r18, 0xFF	; 255
 bde:	3f 4f       	sbci	r19, 0xFF	; 255
 be0:	2e 83       	std	Y+6, r18	; 0x06
 be2:	3f 83       	std	Y+7, r19	; 0x07
 be4:	81 2f       	mov	r24, r17
 be6:	90 2f       	mov	r25, r16
 be8:	df 91       	pop	r29
 bea:	cf 91       	pop	r28
 bec:	1f 91       	pop	r17
 bee:	0f 91       	pop	r16
 bf0:	08 95       	ret

00000bf2 <__ultoa_invert>:
 bf2:	fa 01       	movw	r30, r20
 bf4:	aa 27       	eor	r26, r26
 bf6:	28 30       	cpi	r18, 0x08	; 8
 bf8:	51 f1       	breq	.+84     	; 0xc4e <__ultoa_invert+0x5c>
 bfa:	20 31       	cpi	r18, 0x10	; 16
 bfc:	81 f1       	breq	.+96     	; 0xc5e <__ultoa_invert+0x6c>
 bfe:	e8 94       	clt
 c00:	6f 93       	push	r22
 c02:	6e 7f       	andi	r22, 0xFE	; 254
 c04:	6e 5f       	subi	r22, 0xFE	; 254
 c06:	7f 4f       	sbci	r23, 0xFF	; 255
 c08:	8f 4f       	sbci	r24, 0xFF	; 255
 c0a:	9f 4f       	sbci	r25, 0xFF	; 255
 c0c:	af 4f       	sbci	r26, 0xFF	; 255
 c0e:	b1 e0       	ldi	r27, 0x01	; 1
 c10:	3e d0       	rcall	.+124    	; 0xc8e <__ultoa_invert+0x9c>
 c12:	b4 e0       	ldi	r27, 0x04	; 4
 c14:	3c d0       	rcall	.+120    	; 0xc8e <__ultoa_invert+0x9c>
 c16:	67 0f       	add	r22, r23
 c18:	78 1f       	adc	r23, r24
 c1a:	89 1f       	adc	r24, r25
 c1c:	9a 1f       	adc	r25, r26
 c1e:	a1 1d       	adc	r26, r1
 c20:	68 0f       	add	r22, r24
 c22:	79 1f       	adc	r23, r25
 c24:	8a 1f       	adc	r24, r26
 c26:	91 1d       	adc	r25, r1
 c28:	a1 1d       	adc	r26, r1
 c2a:	6a 0f       	add	r22, r26
 c2c:	71 1d       	adc	r23, r1
 c2e:	81 1d       	adc	r24, r1
 c30:	91 1d       	adc	r25, r1
 c32:	a1 1d       	adc	r26, r1
 c34:	20 d0       	rcall	.+64     	; 0xc76 <__ultoa_invert+0x84>
 c36:	09 f4       	brne	.+2      	; 0xc3a <__ultoa_invert+0x48>
 c38:	68 94       	set
 c3a:	3f 91       	pop	r19
 c3c:	2a e0       	ldi	r18, 0x0A	; 10
 c3e:	26 9f       	mul	r18, r22
 c40:	11 24       	eor	r1, r1
 c42:	30 19       	sub	r19, r0
 c44:	30 5d       	subi	r19, 0xD0	; 208
 c46:	31 93       	st	Z+, r19
 c48:	de f6       	brtc	.-74     	; 0xc00 <__ultoa_invert+0xe>
 c4a:	cf 01       	movw	r24, r30
 c4c:	08 95       	ret
 c4e:	46 2f       	mov	r20, r22
 c50:	47 70       	andi	r20, 0x07	; 7
 c52:	40 5d       	subi	r20, 0xD0	; 208
 c54:	41 93       	st	Z+, r20
 c56:	b3 e0       	ldi	r27, 0x03	; 3
 c58:	0f d0       	rcall	.+30     	; 0xc78 <__ultoa_invert+0x86>
 c5a:	c9 f7       	brne	.-14     	; 0xc4e <__ultoa_invert+0x5c>
 c5c:	f6 cf       	rjmp	.-20     	; 0xc4a <__ultoa_invert+0x58>
 c5e:	46 2f       	mov	r20, r22
 c60:	4f 70       	andi	r20, 0x0F	; 15
 c62:	40 5d       	subi	r20, 0xD0	; 208
 c64:	4a 33       	cpi	r20, 0x3A	; 58
 c66:	18 f0       	brcs	.+6      	; 0xc6e <__ultoa_invert+0x7c>
 c68:	49 5d       	subi	r20, 0xD9	; 217
 c6a:	31 fd       	sbrc	r19, 1
 c6c:	40 52       	subi	r20, 0x20	; 32
 c6e:	41 93       	st	Z+, r20
 c70:	02 d0       	rcall	.+4      	; 0xc76 <__ultoa_invert+0x84>
 c72:	a9 f7       	brne	.-22     	; 0xc5e <__ultoa_invert+0x6c>
 c74:	ea cf       	rjmp	.-44     	; 0xc4a <__ultoa_invert+0x58>
 c76:	b4 e0       	ldi	r27, 0x04	; 4
 c78:	a6 95       	lsr	r26
 c7a:	97 95       	ror	r25
 c7c:	87 95       	ror	r24
 c7e:	77 95       	ror	r23
 c80:	67 95       	ror	r22
 c82:	ba 95       	dec	r27
 c84:	c9 f7       	brne	.-14     	; 0xc78 <__ultoa_invert+0x86>
 c86:	00 97       	sbiw	r24, 0x00	; 0
 c88:	61 05       	cpc	r22, r1
 c8a:	71 05       	cpc	r23, r1
 c8c:	08 95       	ret
 c8e:	9b 01       	movw	r18, r22
 c90:	ac 01       	movw	r20, r24
 c92:	0a 2e       	mov	r0, r26
 c94:	06 94       	lsr	r0
 c96:	57 95       	ror	r21
 c98:	47 95       	ror	r20
 c9a:	37 95       	ror	r19
 c9c:	27 95       	ror	r18
 c9e:	ba 95       	dec	r27
 ca0:	c9 f7       	brne	.-14     	; 0xc94 <__ultoa_invert+0xa2>
 ca2:	62 0f       	add	r22, r18
 ca4:	73 1f       	adc	r23, r19
 ca6:	84 1f       	adc	r24, r20
 ca8:	95 1f       	adc	r25, r21
 caa:	a0 1d       	adc	r26, r0
 cac:	08 95       	ret

00000cae <__prologue_saves__>:
 cae:	2f 92       	push	r2
 cb0:	3f 92       	push	r3
 cb2:	4f 92       	push	r4
 cb4:	5f 92       	push	r5
 cb6:	6f 92       	push	r6
 cb8:	7f 92       	push	r7
 cba:	8f 92       	push	r8
 cbc:	9f 92       	push	r9
 cbe:	af 92       	push	r10
 cc0:	bf 92       	push	r11
 cc2:	cf 92       	push	r12
 cc4:	df 92       	push	r13
 cc6:	ef 92       	push	r14
 cc8:	ff 92       	push	r15
 cca:	0f 93       	push	r16
 ccc:	1f 93       	push	r17
 cce:	cf 93       	push	r28
 cd0:	df 93       	push	r29
 cd2:	cd b7       	in	r28, 0x3d	; 61
 cd4:	de b7       	in	r29, 0x3e	; 62
 cd6:	ca 1b       	sub	r28, r26
 cd8:	db 0b       	sbc	r29, r27
 cda:	cd bf       	out	0x3d, r28	; 61
 cdc:	de bf       	out	0x3e, r29	; 62
 cde:	09 94       	ijmp

00000ce0 <__epilogue_restores__>:
 ce0:	2a 88       	ldd	r2, Y+18	; 0x12
 ce2:	39 88       	ldd	r3, Y+17	; 0x11
 ce4:	48 88       	ldd	r4, Y+16	; 0x10
 ce6:	5f 84       	ldd	r5, Y+15	; 0x0f
 ce8:	6e 84       	ldd	r6, Y+14	; 0x0e
 cea:	7d 84       	ldd	r7, Y+13	; 0x0d
 cec:	8c 84       	ldd	r8, Y+12	; 0x0c
 cee:	9b 84       	ldd	r9, Y+11	; 0x0b
 cf0:	aa 84       	ldd	r10, Y+10	; 0x0a
 cf2:	b9 84       	ldd	r11, Y+9	; 0x09
 cf4:	c8 84       	ldd	r12, Y+8	; 0x08
 cf6:	df 80       	ldd	r13, Y+7	; 0x07
 cf8:	ee 80       	ldd	r14, Y+6	; 0x06
 cfa:	fd 80       	ldd	r15, Y+5	; 0x05
 cfc:	0c 81       	ldd	r16, Y+4	; 0x04
 cfe:	1b 81       	ldd	r17, Y+3	; 0x03
 d00:	aa 81       	ldd	r26, Y+2	; 0x02
 d02:	b9 81       	ldd	r27, Y+1	; 0x01
 d04:	ce 0f       	add	r28, r30
 d06:	d1 1d       	adc	r29, r1
 d08:	cd bf       	out	0x3d, r28	; 61
 d0a:	de bf       	out	0x3e, r29	; 62
 d0c:	ed 01       	movw	r28, r26
 d0e:	08 95       	ret

00000d10 <_exit>:
 d10:	f8 94       	cli

00000d12 <__stop_program>:
 d12:	ff cf       	rjmp	.-2      	; 0xd12 <__stop_program>
